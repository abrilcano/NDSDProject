akka {
  # log-dead-letters = off
  # log-dead-letters-during-shutdown = off
  actor {
    provider = "cluster"
    allow-java-serialization = off
    serialization-bindings {
      "java.util.ArrayList" = jackson-json
      "com.polimi.utils.WindowSnapshot" = jackson-json
      "com.polimi.actors.TempActor$ValueAdded" = jackson-json
      "com.polimi.actors.TempActor$FlushWindow" = jackson-json
      "com.polimi.actors.AirActor$ValueAdded" = jackson-json
      "com.polimi.actors.AirActor$FlushWindow" = jackson-json
      "com.polimi.actors.HumActor$ValueAdded" = jackson-json
      "com.polimi.actors.HumActor$FlushWindow" = jackson-json
      "com.polimi.actors.WindActor$ValueAdded" = jackson-json
      "com.polimi.actors.WindActor$FlushWindow" = jackson-json
    }
  }
  persistence {
    journal.plugin = "akka.persistence.journal.leveldb"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"

    journal.leveldb {
      dir = "target/journal"
      native = false
    }

    snapshot-store.local {
      dir = "target/snapshots"
    }
  }
  remote{
    artery{
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 2551
    }
  }
  cluster{
    seed-nodes = [
      "akka://DataConsumerSystem@127.0.0.1:2551",
      # "akka://TemperatureConsumerSystem@127.0.0.1:2552"
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}